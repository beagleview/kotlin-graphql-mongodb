buildscript {
	ext {
		kotlinVersion = '1.2.51'
		springBootVersion = '2.0.4.RELEASE'
		graphqlVersion = '9.0'
		graphqlSpringBootVersion = '5.0.2'
		graphqlToolsVersion = '5.2.0'
	}
	repositories {
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.graphql.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	jcenter()
	mavenCentral()
}


dependencies {
	implementation("com.graphql-java:graphql-java:${graphqlVersion}")
	implementation("com.graphql-java:graphql-spring-boot-starter:${graphqlSpringBootVersion}")
	implementation("com.graphql-java:graphiql-spring-boot-starter:${graphqlSpringBootVersion}")
	implementation("com.graphql-java:graphql-java-tools:${graphqlToolsVersion}")

	implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	implementation('org.projectlombok:lombok')

	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
}
